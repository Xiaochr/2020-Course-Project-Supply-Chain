# Generated by Django 3.1 on 2020-09-07 14:23

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ColumnsPriv',
            fields=[
                ('host', models.CharField(db_column='Host', max_length=60, primary_key=True, serialize=False)),
                ('db', models.CharField(db_column='Db', max_length=64)),
                ('user', models.CharField(db_column='User', max_length=32)),
                ('table_name', models.CharField(db_column='Table_name', max_length=64)),
                ('column_name', models.CharField(db_column='Column_name', max_length=64)),
                ('timestamp', models.DateTimeField(db_column='Timestamp')),
                ('column_priv', models.CharField(db_column='Column_priv', max_length=31)),
            ],
            options={
                'db_table': 'columns_priv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('component_id', models.AutoField(primary_key=True, serialize=False)),
                ('component_group_id', models.PositiveIntegerField()),
                ('component_urn', models.TextField()),
            ],
            options={
                'db_table': 'component',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Db',
            fields=[
                ('host', models.CharField(db_column='Host', max_length=60, primary_key=True, serialize=False)),
                ('db', models.CharField(db_column='Db', max_length=64)),
                ('user', models.CharField(db_column='User', max_length=32)),
                ('select_priv', models.CharField(db_column='Select_priv', max_length=1)),
                ('insert_priv', models.CharField(db_column='Insert_priv', max_length=1)),
                ('update_priv', models.CharField(db_column='Update_priv', max_length=1)),
                ('delete_priv', models.CharField(db_column='Delete_priv', max_length=1)),
                ('create_priv', models.CharField(db_column='Create_priv', max_length=1)),
                ('drop_priv', models.CharField(db_column='Drop_priv', max_length=1)),
                ('grant_priv', models.CharField(db_column='Grant_priv', max_length=1)),
                ('references_priv', models.CharField(db_column='References_priv', max_length=1)),
                ('index_priv', models.CharField(db_column='Index_priv', max_length=1)),
                ('alter_priv', models.CharField(db_column='Alter_priv', max_length=1)),
                ('create_tmp_table_priv', models.CharField(db_column='Create_tmp_table_priv', max_length=1)),
                ('lock_tables_priv', models.CharField(db_column='Lock_tables_priv', max_length=1)),
                ('create_view_priv', models.CharField(db_column='Create_view_priv', max_length=1)),
                ('show_view_priv', models.CharField(db_column='Show_view_priv', max_length=1)),
                ('create_routine_priv', models.CharField(db_column='Create_routine_priv', max_length=1)),
                ('alter_routine_priv', models.CharField(db_column='Alter_routine_priv', max_length=1)),
                ('execute_priv', models.CharField(db_column='Execute_priv', max_length=1)),
                ('event_priv', models.CharField(db_column='Event_priv', max_length=1)),
                ('trigger_priv', models.CharField(db_column='Trigger_priv', max_length=1)),
            ],
            options={
                'db_table': 'db',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DefaultRoles',
            fields=[
                ('host', models.CharField(db_column='HOST', max_length=60, primary_key=True, serialize=False)),
                ('user', models.CharField(db_column='USER', max_length=32)),
                ('default_role_host', models.CharField(db_column='DEFAULT_ROLE_HOST', max_length=60)),
                ('default_role_user', models.CharField(db_column='DEFAULT_ROLE_USER', max_length=32)),
            ],
            options={
                'db_table': 'default_roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EngineCost',
            fields=[
                ('engine_name', models.CharField(max_length=64)),
                ('device_type', models.IntegerField()),
                ('cost_name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('cost_value', models.FloatField(blank=True, null=True)),
                ('last_update', models.DateTimeField()),
                ('comment', models.CharField(blank=True, max_length=1024, null=True)),
                ('default_value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'engine_cost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Func',
            fields=[
                ('name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('ret', models.IntegerField()),
                ('dl', models.CharField(max_length=128)),
                ('type', models.CharField(max_length=9)),
            ],
            options={
                'db_table': 'func',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeneralLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_time', models.DateTimeField()),
                ('user_host', models.TextField()),
                ('thread_id', models.PositiveBigIntegerField()),
                ('server_id', models.PositiveIntegerField()),
                ('command_type', models.CharField(max_length=64)),
                ('argument', models.TextField()),
            ],
            options={
                'db_table': 'general_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GlobalGrants',
            fields=[
                ('user', models.CharField(db_column='USER', max_length=32, primary_key=True, serialize=False)),
                ('host', models.CharField(db_column='HOST', max_length=60)),
                ('priv', models.CharField(db_column='PRIV', max_length=32)),
                ('with_grant_option', models.CharField(db_column='WITH_GRANT_OPTION', max_length=1)),
            ],
            options={
                'db_table': 'global_grants',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GtidExecuted',
            fields=[
                ('source_uuid', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('interval_start', models.BigIntegerField()),
                ('interval_end', models.BigIntegerField()),
            ],
            options={
                'db_table': 'gtid_executed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HelpCategory',
            fields=[
                ('help_category_id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('parent_category_id', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('url', models.TextField()),
            ],
            options={
                'db_table': 'help_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HelpKeyword',
            fields=[
                ('help_keyword_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'db_table': 'help_keyword',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HelpRelation',
            fields=[
                ('help_topic_id', models.PositiveIntegerField()),
                ('help_keyword_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'help_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HelpTopic',
            fields=[
                ('help_topic_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('help_category_id', models.PositiveSmallIntegerField()),
                ('description', models.TextField()),
                ('example', models.TextField()),
                ('url', models.TextField()),
            ],
            options={
                'db_table': 'help_topic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InnodbIndexStats',
            fields=[
                ('database_name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('table_name', models.CharField(max_length=199)),
                ('index_name', models.CharField(max_length=64)),
                ('last_update', models.DateTimeField()),
                ('stat_name', models.CharField(max_length=64)),
                ('stat_value', models.PositiveBigIntegerField()),
                ('sample_size', models.PositiveBigIntegerField(blank=True, null=True)),
                ('stat_description', models.CharField(max_length=1024)),
            ],
            options={
                'db_table': 'innodb_index_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InnodbTableStats',
            fields=[
                ('database_name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('table_name', models.CharField(max_length=199)),
                ('last_update', models.DateTimeField()),
                ('n_rows', models.PositiveBigIntegerField()),
                ('clustered_index_size', models.PositiveBigIntegerField()),
                ('sum_of_other_index_sizes', models.PositiveBigIntegerField()),
            ],
            options={
                'db_table': 'innodb_table_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PasswordHistory',
            fields=[
                ('host', models.CharField(db_column='Host', max_length=60, primary_key=True, serialize=False)),
                ('user', models.CharField(db_column='User', max_length=32)),
                ('password_timestamp', models.DateTimeField(db_column='Password_timestamp')),
                ('password', models.TextField(blank=True, db_column='Password', null=True)),
            ],
            options={
                'db_table': 'password_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Plugin',
            fields=[
                ('name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('dl', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'plugin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcsPriv',
            fields=[
                ('host', models.CharField(db_column='Host', max_length=60, primary_key=True, serialize=False)),
                ('db', models.CharField(db_column='Db', max_length=64)),
                ('user', models.CharField(db_column='User', max_length=32)),
                ('routine_name', models.CharField(db_column='Routine_name', max_length=64)),
                ('routine_type', models.CharField(db_column='Routine_type', max_length=9)),
                ('grantor', models.CharField(db_column='Grantor', max_length=93)),
                ('proc_priv', models.CharField(db_column='Proc_priv', max_length=27)),
                ('timestamp', models.DateTimeField(db_column='Timestamp')),
            ],
            options={
                'db_table': 'procs_priv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProxiesPriv',
            fields=[
                ('host', models.CharField(db_column='Host', max_length=60, primary_key=True, serialize=False)),
                ('user', models.CharField(db_column='User', max_length=32)),
                ('proxied_host', models.CharField(db_column='Proxied_host', max_length=60)),
                ('proxied_user', models.CharField(db_column='Proxied_user', max_length=32)),
                ('with_grant', models.IntegerField(db_column='With_grant')),
                ('grantor', models.CharField(db_column='Grantor', max_length=93)),
                ('timestamp', models.DateTimeField(db_column='Timestamp')),
            ],
            options={
                'db_table': 'proxies_priv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoleEdges',
            fields=[
                ('from_host', models.CharField(db_column='FROM_HOST', max_length=60, primary_key=True, serialize=False)),
                ('from_user', models.CharField(db_column='FROM_USER', max_length=32)),
                ('to_host', models.CharField(db_column='TO_HOST', max_length=60)),
                ('to_user', models.CharField(db_column='TO_USER', max_length=32)),
                ('with_admin_option', models.CharField(db_column='WITH_ADMIN_OPTION', max_length=1)),
            ],
            options={
                'db_table': 'role_edges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServerCost',
            fields=[
                ('cost_name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('cost_value', models.FloatField(blank=True, null=True)),
                ('last_update', models.DateTimeField()),
                ('comment', models.CharField(blank=True, max_length=1024, null=True)),
                ('default_value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'server_cost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Servers',
            fields=[
                ('server_name', models.CharField(db_column='Server_name', max_length=64, primary_key=True, serialize=False)),
                ('host', models.CharField(db_column='Host', max_length=64)),
                ('db', models.CharField(db_column='Db', max_length=64)),
                ('username', models.CharField(db_column='Username', max_length=64)),
                ('password', models.CharField(db_column='Password', max_length=64)),
                ('port', models.IntegerField(db_column='Port')),
                ('socket', models.CharField(db_column='Socket', max_length=64)),
                ('wrapper', models.CharField(db_column='Wrapper', max_length=64)),
                ('owner', models.CharField(db_column='Owner', max_length=64)),
            ],
            options={
                'db_table': 'servers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SlaveMasterInfo',
            fields=[
                ('number_of_lines', models.PositiveIntegerField(db_column='Number_of_lines')),
                ('master_log_name', models.TextField(db_column='Master_log_name')),
                ('master_log_pos', models.PositiveBigIntegerField(db_column='Master_log_pos')),
                ('host', models.CharField(blank=True, db_column='Host', max_length=64, null=True)),
                ('user_name', models.TextField(blank=True, db_column='User_name', null=True)),
                ('user_password', models.TextField(blank=True, db_column='User_password', null=True)),
                ('port', models.PositiveIntegerField(db_column='Port')),
                ('connect_retry', models.PositiveIntegerField(db_column='Connect_retry')),
                ('enabled_ssl', models.IntegerField(db_column='Enabled_ssl')),
                ('ssl_ca', models.TextField(blank=True, db_column='Ssl_ca', null=True)),
                ('ssl_capath', models.TextField(blank=True, db_column='Ssl_capath', null=True)),
                ('ssl_cert', models.TextField(blank=True, db_column='Ssl_cert', null=True)),
                ('ssl_cipher', models.TextField(blank=True, db_column='Ssl_cipher', null=True)),
                ('ssl_key', models.TextField(blank=True, db_column='Ssl_key', null=True)),
                ('ssl_verify_server_cert', models.IntegerField(db_column='Ssl_verify_server_cert')),
                ('heartbeat', models.FloatField(db_column='Heartbeat')),
                ('bind', models.TextField(blank=True, db_column='Bind', null=True)),
                ('ignored_server_ids', models.TextField(blank=True, db_column='Ignored_server_ids', null=True)),
                ('uuid', models.TextField(blank=True, db_column='Uuid', null=True)),
                ('retry_count', models.PositiveBigIntegerField(db_column='Retry_count')),
                ('ssl_crl', models.TextField(blank=True, db_column='Ssl_crl', null=True)),
                ('ssl_crlpath', models.TextField(blank=True, db_column='Ssl_crlpath', null=True)),
                ('enabled_auto_position', models.IntegerField(db_column='Enabled_auto_position')),
                ('channel_name', models.CharField(db_column='Channel_name', max_length=64, primary_key=True, serialize=False)),
                ('tls_version', models.TextField(blank=True, db_column='Tls_version', null=True)),
                ('public_key_path', models.TextField(blank=True, db_column='Public_key_path', null=True)),
                ('get_public_key', models.IntegerField(db_column='Get_public_key')),
            ],
            options={
                'db_table': 'slave_master_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SlaveRelayLogInfo',
            fields=[
                ('number_of_lines', models.PositiveIntegerField(db_column='Number_of_lines')),
                ('relay_log_name', models.TextField(db_column='Relay_log_name')),
                ('relay_log_pos', models.PositiveBigIntegerField(db_column='Relay_log_pos')),
                ('master_log_name', models.TextField(db_column='Master_log_name')),
                ('master_log_pos', models.PositiveBigIntegerField(db_column='Master_log_pos')),
                ('sql_delay', models.IntegerField(db_column='Sql_delay')),
                ('number_of_workers', models.PositiveIntegerField(db_column='Number_of_workers')),
                ('id', models.PositiveIntegerField(db_column='Id')),
                ('channel_name', models.CharField(db_column='Channel_name', max_length=64, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'slave_relay_log_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SlaveWorkerInfo',
            fields=[
                ('id', models.PositiveIntegerField(db_column='Id')),
                ('relay_log_name', models.TextField(db_column='Relay_log_name')),
                ('relay_log_pos', models.PositiveBigIntegerField(db_column='Relay_log_pos')),
                ('master_log_name', models.TextField(db_column='Master_log_name')),
                ('master_log_pos', models.PositiveBigIntegerField(db_column='Master_log_pos')),
                ('checkpoint_relay_log_name', models.TextField(db_column='Checkpoint_relay_log_name')),
                ('checkpoint_relay_log_pos', models.PositiveBigIntegerField(db_column='Checkpoint_relay_log_pos')),
                ('checkpoint_master_log_name', models.TextField(db_column='Checkpoint_master_log_name')),
                ('checkpoint_master_log_pos', models.PositiveBigIntegerField(db_column='Checkpoint_master_log_pos')),
                ('checkpoint_seqno', models.PositiveIntegerField(db_column='Checkpoint_seqno')),
                ('checkpoint_group_size', models.PositiveIntegerField(db_column='Checkpoint_group_size')),
                ('checkpoint_group_bitmap', models.TextField(db_column='Checkpoint_group_bitmap')),
                ('channel_name', models.CharField(db_column='Channel_name', max_length=64, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'slave_worker_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SlowLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('user_host', models.TextField()),
                ('query_time', models.TimeField()),
                ('lock_time', models.TimeField()),
                ('rows_sent', models.IntegerField()),
                ('rows_examined', models.IntegerField()),
                ('db', models.CharField(max_length=512)),
                ('last_insert_id', models.IntegerField()),
                ('insert_id', models.IntegerField()),
                ('server_id', models.PositiveIntegerField()),
                ('sql_text', models.TextField()),
                ('thread_id', models.PositiveBigIntegerField()),
            ],
            options={
                'db_table': 'slow_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TablesPriv',
            fields=[
                ('host', models.CharField(db_column='Host', max_length=60, primary_key=True, serialize=False)),
                ('db', models.CharField(db_column='Db', max_length=64)),
                ('user', models.CharField(db_column='User', max_length=32)),
                ('table_name', models.CharField(db_column='Table_name', max_length=64)),
                ('grantor', models.CharField(db_column='Grantor', max_length=93)),
                ('timestamp', models.DateTimeField(db_column='Timestamp')),
                ('table_priv', models.CharField(db_column='Table_priv', max_length=98)),
                ('column_priv', models.CharField(db_column='Column_priv', max_length=31)),
            ],
            options={
                'db_table': 'tables_priv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeZone',
            fields=[
                ('time_zone_id', models.AutoField(db_column='Time_zone_id', primary_key=True, serialize=False)),
                ('use_leap_seconds', models.CharField(db_column='Use_leap_seconds', max_length=1)),
            ],
            options={
                'db_table': 'time_zone',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeZoneLeapSecond',
            fields=[
                ('transition_time', models.BigIntegerField(db_column='Transition_time', primary_key=True, serialize=False)),
                ('correction', models.IntegerField(db_column='Correction')),
            ],
            options={
                'db_table': 'time_zone_leap_second',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeZoneName',
            fields=[
                ('name', models.CharField(db_column='Name', max_length=64, primary_key=True, serialize=False)),
                ('time_zone_id', models.PositiveIntegerField(db_column='Time_zone_id')),
            ],
            options={
                'db_table': 'time_zone_name',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeZoneTransition',
            fields=[
                ('time_zone_id', models.PositiveIntegerField(db_column='Time_zone_id', primary_key=True, serialize=False)),
                ('transition_time', models.BigIntegerField(db_column='Transition_time')),
                ('transition_type_id', models.PositiveIntegerField(db_column='Transition_type_id')),
            ],
            options={
                'db_table': 'time_zone_transition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeZoneTransitionType',
            fields=[
                ('time_zone_id', models.PositiveIntegerField(db_column='Time_zone_id', primary_key=True, serialize=False)),
                ('transition_type_id', models.PositiveIntegerField(db_column='Transition_type_id')),
                ('offset', models.IntegerField(db_column='Offset')),
                ('is_dst', models.PositiveIntegerField(db_column='Is_DST')),
                ('abbreviation', models.CharField(db_column='Abbreviation', max_length=8)),
            ],
            options={
                'db_table': 'time_zone_transition_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('host', models.CharField(db_column='Host', max_length=60, primary_key=True, serialize=False)),
                ('user', models.CharField(db_column='User', max_length=32)),
                ('select_priv', models.CharField(db_column='Select_priv', max_length=1)),
                ('insert_priv', models.CharField(db_column='Insert_priv', max_length=1)),
                ('update_priv', models.CharField(db_column='Update_priv', max_length=1)),
                ('delete_priv', models.CharField(db_column='Delete_priv', max_length=1)),
                ('create_priv', models.CharField(db_column='Create_priv', max_length=1)),
                ('drop_priv', models.CharField(db_column='Drop_priv', max_length=1)),
                ('reload_priv', models.CharField(db_column='Reload_priv', max_length=1)),
                ('shutdown_priv', models.CharField(db_column='Shutdown_priv', max_length=1)),
                ('process_priv', models.CharField(db_column='Process_priv', max_length=1)),
                ('file_priv', models.CharField(db_column='File_priv', max_length=1)),
                ('grant_priv', models.CharField(db_column='Grant_priv', max_length=1)),
                ('references_priv', models.CharField(db_column='References_priv', max_length=1)),
                ('index_priv', models.CharField(db_column='Index_priv', max_length=1)),
                ('alter_priv', models.CharField(db_column='Alter_priv', max_length=1)),
                ('show_db_priv', models.CharField(db_column='Show_db_priv', max_length=1)),
                ('super_priv', models.CharField(db_column='Super_priv', max_length=1)),
                ('create_tmp_table_priv', models.CharField(db_column='Create_tmp_table_priv', max_length=1)),
                ('lock_tables_priv', models.CharField(db_column='Lock_tables_priv', max_length=1)),
                ('execute_priv', models.CharField(db_column='Execute_priv', max_length=1)),
                ('repl_slave_priv', models.CharField(db_column='Repl_slave_priv', max_length=1)),
                ('repl_client_priv', models.CharField(db_column='Repl_client_priv', max_length=1)),
                ('create_view_priv', models.CharField(db_column='Create_view_priv', max_length=1)),
                ('show_view_priv', models.CharField(db_column='Show_view_priv', max_length=1)),
                ('create_routine_priv', models.CharField(db_column='Create_routine_priv', max_length=1)),
                ('alter_routine_priv', models.CharField(db_column='Alter_routine_priv', max_length=1)),
                ('create_user_priv', models.CharField(db_column='Create_user_priv', max_length=1)),
                ('event_priv', models.CharField(db_column='Event_priv', max_length=1)),
                ('trigger_priv', models.CharField(db_column='Trigger_priv', max_length=1)),
                ('create_tablespace_priv', models.CharField(db_column='Create_tablespace_priv', max_length=1)),
                ('ssl_type', models.CharField(max_length=9)),
                ('ssl_cipher', models.TextField()),
                ('x509_issuer', models.TextField()),
                ('x509_subject', models.TextField()),
                ('max_questions', models.PositiveIntegerField()),
                ('max_updates', models.PositiveIntegerField()),
                ('max_connections', models.PositiveIntegerField()),
                ('max_user_connections', models.PositiveIntegerField()),
                ('plugin', models.CharField(max_length=64)),
                ('authentication_string', models.TextField(blank=True, null=True)),
                ('password_expired', models.CharField(max_length=1)),
                ('password_last_changed', models.DateTimeField(blank=True, null=True)),
                ('password_lifetime', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('account_locked', models.CharField(max_length=1)),
                ('create_role_priv', models.CharField(db_column='Create_role_priv', max_length=1)),
                ('drop_role_priv', models.CharField(db_column='Drop_role_priv', max_length=1)),
                ('password_reuse_history', models.PositiveSmallIntegerField(blank=True, db_column='Password_reuse_history', null=True)),
                ('password_reuse_time', models.PositiveSmallIntegerField(blank=True, db_column='Password_reuse_time', null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
    ]
